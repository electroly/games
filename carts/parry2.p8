pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
--parry ii: the quest for uncle matt
--by electroly

function _init()
	--show cpu and ram
	show_debug_info=true

	--0=easy, 1=medium, 2=hard
	difficulty=0

	--button constants
	btn_l=0
	btn_r=1
	btn_u=2
	btn_d=3
	btn_o=4
	btn_x=5
	
	--color constants
	clr_bla=0
	clr_dblu=1
	clr_dpur=2
	clr_dgre=3
	clr_bro=4
	clr_dgra=5
	clr_lgra=6
	clr_whi=7
	clr_red=8
	clr_ora=9
	clr_yel=10
	clr_gre=11
	clr_blu=12
	clr_lav=13
	clr_pin=14
	clr_pea=15

 --last btn state, for edge
 --triggering
 lstbtn={}
 btnup={}
 btndn={}
 for i=0,5 do
 	lstbtn[i]=false
 	btnup[i]={}
 	btndn[i]={}
 end

	init_font1()
 
	--scenes
	scn={
		title=0,
		intro=1,
		gamesuccess=2,
		gamefailed=3,
		nextgame=4,
		game01=10, --matt in diaper
		game02=11, --lift weights
		game03=12 --find parry
	}
	
	playlist={
		scn.game01,
		scn.game02,
		scn.game03
	}
	playlist_success=scn.title
	playlist_failed=scn.title
	
	change_scene(scn.nextgame)
end

function _update60()
	ctr+=1
	if(ctr<0)ctr=32000

	--button edge triggering
	for i=0,5 do
	 local lst=lstbtn[i]
		local now=btn(i)
		btnup[i]=lst and not now
		btndn[i]=now and not lst
		lstbtn[i]=now
	end
	
	if scene==scn.title then
		update_title_scene()
	elseif scene==scn.intro then
		update_intro_scene()
	elseif scene==scn.game01 then
		game01_update()
	elseif scene==scn.game02 then
		game02_update()
	elseif scene==scn.game03 then
		game03_update()
	elseif scene==scn.gamesuccess then
		gamesuccess_update()
	elseif scene==scn.gamefailed then
		gamefailed_update()
	end
end

function _draw()
	--if we just changed scene in
	--update(), then we haven't
	--yet ran update() for the new
	--scene. skip the first frame
	--so the new scene can update
	--before we draw it.
	if(ctr==0)return
	
	if scene==scn.title then
		draw_title_scene()
	elseif scene==scn.intro then
		draw_intro_scene()
	elseif scene==scn.game01 then
		game01_draw()
	elseif scene==scn.game02 then
		game02_draw()
	elseif scene==scn.game03 then
		game03_draw()
	elseif scene==scn.gamesuccess then
		gamesuccess_draw()
	elseif scene==scn.gamefailed then
		gamefailed_draw()
	end
	
	if show_debug_info then
		local mem=flr(100*stat(0)/2048)
		local cyc=flr(100*stat(1))
		print(
			"c:"..cyc.."% m:"..mem.."%",
			60,0,clr_red)
	end
end

function change_scene(n)
	if n==scn.nextgame then
		if #playlist==0 then
			n=playlist_success
		else
			n=playlist[1]
			deli(playlist,1)
		end
	end
	
	scene=n
	scst={} --scene state
	ctr=0
	music(-1)
	if scene==scn.title then
		music(0)
	elseif scene==scn.intro then
		music(3)
	elseif scene==scn.game01 then
		game01_init()
	elseif scene==scn.game02 then
		game02_init()
	elseif scene==scn.game03 then
		game03_init()
	elseif scene==scn.gamesuccess then
		gamesuccess_init()
	elseif scene==scn.gamefailed then
		gamefailed_init()
	end
end

function draw_title_scene()
	cls(1)
	sspr(0,32,32,16,centerx(32),30)
	local t="the quest for uncle matt"
	print_wavy(t,center_text(t),55,14)
	t="press ❎ to play"
	print_font1(t,centerx(font1_width(t)),80)
	t="pc keys: ❎x 🅾️c"
	print_font1(t,centerx(font1_width(t)),110)
	t="(c) 2022 brian luft"
	print_font1(t,centerx(font1_width(t)),120)
end

function update_title_scene()
	if(btndn[5])change_scene(scn.intro)
end

function map_flip_waves()
	for x=0,16 do
		for y=0,16 do
			local s=mget(x,y)
			if s==41 then
				s=23
			elseif s==23 then
				s=41
			end
			mset(x,y,s)
		end
	end
end

function draw_map()
	if((ctr%45)==0)map_flip_waves()
	map(0,0,0,0,16,16)
end

function update_intro_scene()
 if(ctr==120)sfx(0,0)
	if ctr>120 then
		if(btndn[5])change_scene(scn.game01)
	end
end

function draw_intro_scene()
	cls(0)
	draw_map()
	if(ctr>=120)draw_dlg({"will m. rabbit has","imprisoned uncle matt","at franklin castle!","","are you a bad enough","bird to rescue uncle","matt?","","  ❎ continue"},20)
end

-->8
--art
function art_mattchamp(x,y,scl)
	poly_start(
		--the art doesn't start at
		--0,0; just fix it here
		x-13*scl,
		y-5*scl,
		scl,scl)
	--skin
	poly(15,{
		2820,3821,5224,5831,5742,
		7246,7551,7557,7561,7264,
		6470,6478,5386,3993,3194,
		2691,2485,2182,2375,2270,
		2164,1959,1951,2136,2428,
		2820})
	--glasses side
	poly(5,{
		5042,5055,5849,7349,7246,
	 5744,5042})
	--glasses left
	poly(0,{
		1336,2136,2839,2845,
		2251,1951,1650,1344,1336})
	--glasses right
	poly(0,{
		2839,4139,5042,
		5055,4656,3956,3153,2845,
		2839})
	--hair
	poly(4,{
		7246,5742,5831,5224,3821,
		2820,2715,3211,4006,6307,
		6911,7620,8237,7845,8150,
		8156,7562,7566,7968,7774,
		7075,6478,6470,7264,7557,
		7551,7349})
	--mouth
	poly(0,{
		2270,2871,3376,2883,2485,
		2182,2375,2270})
	--nose
	poly_line(0,{
		2845,2351,2056,1959,2362,
		2862})
	--ear
	poly_line(0,{
		6756,7059,6962,6562})
end

function art_diaper(x,y,scl)
	poly_start(x,y,scl,scl)
	--diaper
	poly(7,{
		8913,7119,5921,3921,2419,
		0912,0652,1455,2565,3176,
		3296,6596,6778,7464,8356,
		9353,8913
	})
	--top hole
	poly(5,{
		0912,2904,4803,7004,8913,
		7119,5921,3921,2419,0912})
	--left leg hole
	poly(5,{
		0652,0870,1581,3296,3176,
		2565,1455,0652})
	--right leg hole
	poly(5,{
		6596,6778,7464,8356,9353,
		9170,8285,6596})
	--left tape
	poly(14,{
		0424,2429,2734,2540,1841,
		0237,0424})
	--right tape
	poly(14,{
		9425,9637,8042,7541,7136,
		7431,7928,9425})
end

function art_parry_sitting(x,y,scl)
	poly_start(x,y,scl,scl)
	--tail
	poly(1018,{
		2061,1548,3348,3561,3665,3775,
		3899,3096,2988,2886,2781,2676,
		2473,2268,2061
	})
	--white face
	poly(7,{
		0203,1503,1705,1909,2013,1918,
		1220,1416,1311,0706,0311,0207,
		0203
	})
	--yellow body
	poly(10,{
		1705,1906,2209,2417,2719,2826,
		3135,3442,3751,3348,1548,1143,
		1035,0829,0527,0421,1220,1918,
		2013,1909,1705
	})
	--green top of head
	poly(11,{
		0203,0401,0800,1300,1803,2209,
		1906,1705,1503,0203
	})
	--brown beak
	poly(4,{
		0706,1311,1416,1220,0419,0317,
		0311,0706
	})
	--black beak outline
	poly_line(0,{
		1213,0810,0317
	})
	--blue left wing
	poly(12,{
		1548,1143,1035,0829,0527,0421,
		0224,0132,0238,0545,0848,0951,
		1355,1548
	})
	--blue right wing
	poly(12,{
		2719,2826,3135,3442,3751,3847,
		4036,3825,3721,3416,2815,2719
	})
	--black eye
	poly(0,{
		1107,1405,1507,1308,1107
	})
end

function art_parry_flap1(x,y,scl)
	--offset so it fits talons
	x-=27*scl
	y+=18*scl
	poly_start(x,y,scl,scl)
	polys({
		--tail
		"1018 4324 5924 5231 4537 4137 3343 3930 4324",
		"1018 4137 4537 4142 3449 4040 4137",
		"1018 4537 4449 4156 4651 4843 5231 4537",
		"1018 5224 5231 5443 6054 5847 5942 6239 6132 5924 5224",
		"1018 5924 6132 6539 7445 6838 6733 5924",
		--left wing
		"0010 0019 0313 0410 0709 0906 1605 2504 1513 0019",
		"0010 0722 1513 2504 3802 4505 4708 4718 4821 5224 4324 3228 2128 1427 1024 0722",
		"0012 6607 7405 7909 8414 8820 7711 7208 6607",
		"0012 0410 0904 2702 3802 1006 0709 0410",
		"9999 0009 2312 1124",
		"9999 0009 2613 2128",
		"9999 0009 2814 2728",
		"9999 0009 3014 3228",
		"9999 0009 3516 3726",
		"9999 0009 3918 4025",
		--right wing
		"0010 5224 5521 5718 5714 5910 6108 6607 7208 7711 8820 9931 9638 8537 7434 6728 5924 5224",
		"9999 0009 6213 6125",
		"9999 0009 6418 6527",
		"9999 0009 6818 7132",
		"9999 0009 7218 7735",
		"9999 0009 7720 8236",
		"9999 0009 8121 8837",
		"9999 0009 8522 9638",
		--top of head
		"0011 4718 4914 5213 5514 5718 5416 5016 4718",
		--face
		"0007 4718 5016 5416 5718 5521 5224 4821 4718",
		--beak
		"0004 5018 5220 5221 5422 4922 5018"
	})	
end

function art_parry_flap2(x,y,scl)
	x-=24*scl
	y+=10*scl
	poly_start(x,y,scl,scl)
	polys({
		--tail
		"1018 2653 3935 3743 2653",
		"1018 3935 3743 3362 3948 4335 3935",
		"1018 4335 3948 4165 4366 4757 4952 5249 4836 4335",
		"1018 4836 5249 5860 5545 5236 4836",
		"1018 5236 5545 6252 5538 5236",
		--right wing
		"0010 5237 5522 5615 5812 6016 6027 5531 5236",
		"0010 5812 6910 7516 8120 8525 8128 7729 6633 6027 6016 5812",
		"0010 6910 7409 8719 8622 8120 7516 6910",
		"0010 7409 8719 9622 9915 9312 8409 7409",
		"0012 5522 5414 5710 6608 8509 7409 6910 5812 5615 5522",
		"9999 0009 6421 6633",
		"9999 0009 6919 7729",
		"9999 0009 7516 8322",
		"9999 0009 8114 8719",
		--left wing
		"0010 0610 1105 3003 3806 4409 4535 3935 3727 2121 1418 0610",
		"0012 1105 3201 4409 3806 3003 1105",
		"9999 0009 2607 0610",
		"9999 0009 2709 1316",
		"9999 0009 3212 2121",
		"9999 0009 3612 3125",
		"9999 0009 4018 3727",
		--face
		"0007 4231 4824 5231 5236 4836 4535 4231",
		"9999 0000 4931 5133",
		"9999 0000 4730 4631",
		--beak
		"0004 4732 4933 4934 4636 4732",
		--top of head
		"0011 4528 4825 5226 5330 4827 4528"
	})
end

function art_parry_talons(x,y,scl)
	poly_start(x,y,scl,scl)
	--left talon
	poly(4,{
		1548,1355,1561,1961,1755,2048,
		1548
	})
	--right talon
	poly(4,{
		2749,3053,2958,3360,3459,3553,
		3348,2749
	})
end

function art_barbell(x,y)
	x-=19
	y+=19
	sspr(0,64,16,16,x,y)
	x+=16
	for i=1,4 do
		sspr(16,64,8,16,x,y)
		x+=8
	end
	sspr(0,64,16,16,x,y,16,16,true)
end

function art_timer(maxctr)
	sspr(48,32,16,16,112,112)
	local pct=ctr/maxctr
	local i=flr(pct*8)
	if(i<8)spr(72+i,116,116)
end

-->8
--games

function default_maxtime()
	if(difficulty==1)return 400
	if(difficulty==2)return 200
	return 600
end

--gamesuccess--
function gamesuccess_init()
end

function gamesuccess_update()
	if(ctr==120)change_scene(scn.nextgame)
end

function gamesuccess_draw()
	cls(1)
	local t="good job!"
	print_font1(t,
		centerx(font1_width(t)),
		30)
	local s="s"
	if(#playlist==1)s=""
	t=#playlist.." game"..s.." left"
	print_font1(t,
		centerx(font1_width(t)),
		40)

	if (flr(ctr/30)%2)==0 then
		art_parry_sitting(
			55,70,0.4)
	else
		art_parry_flap1(45,
			50,0.8)
	end
	art_parry_talons(
		55,70,0.4)
end
--end gamesuccess--

--gamefailed--
function gamefailed_init()
	
end

function gamefailed_update()
	if(ctr==240)change_scene(playlist_failed)
end

function gamefailed_draw()
	cls(1)
	print("todo:gamefailed",0,0,7)
end
--end gamefailed--

--game01--
function game01_init()
	g01_matx=40
	g01_maty=5
	g01_matscl=0.4
	g01_drop=false
	g01_spd=1
	g01_dprscl=0.3 --diaper scale
	g01_dprx=0
	g01_dpry=115-100*g01_dprscl			
	g01_success_ctr=nil
	g01_maxtime=default_maxtime()
end

function game01_update()
	if g01_success_ctr!=nil then
		if ctr-g01_success_ctr>60 then
			change_scene(scn.gamesuccess)
		end
		return
	end

	--matt-diaper collision
	local matw=72*g01_matscl
	if g01_maty
			>=116-g01_matscl*100 then
		local dprw=100*g01_dprscl
		local matdprdist=abs(
			(g01_matx+matw/2)
			-(g01_dprx+dprw/2))
		if matdprdist<0.35*dprw then
			sfx(10,3)
			g01_success_ctr=ctr
		else
			g01_drop=false
			g01_matx=40
			g01_maty=5
			sfx(0,3)
		end
		return
	end

	--matt
	if g01_drop then
		g01_maty+=2
	else
		if btn(0) then
			--move matt left
			g01_matx=max(g01_matx-1.6,1)
		end
		if btn(1) then
		 --move matt right
			g01_matx=min(g01_matx+1.6,
				128-matw)
		end
		if btndn[3] then
			--drop matt
			g01_drop=true
			sfx(11,3)
		end
	end

	--diaper	
	local half=
		(120-100*g01_dprscl)/2
	g01_dprx=4+half
		+flr(half*sin(
			g01_spd*ctr/120))
end

function game01_draw()
	cls(9)

	art_diaper(g01_dprx,
		g01_dpry,g01_dprscl)

	art_mattchamp(
		flr(g01_matx),
		flr(g01_maty),
		g01_matscl)

	draw_footer(
		"put matt in his diaper!",
		"use: ⬅️➡️⬇️",
		g01_maxtime,
		g01_success_ctr)
end
--end game01--

--game02--
function game02_init()
	g02_flap=0
	g02_flapcd=0 --cooldown
	g02_success_ctr=nil
	g02_y=70
	g02_vy=0
	g02_maxtime=default_maxtime()
end

function game02_update()
	local grav=0.115
	local impulse=1.4
	if(difficulty==1)impulse=1.35
	if(difficulty==2)impulse=1.3
	
	if g02_success_ctr==nil then
		if g02_y<=-5 then
			sfx(10,3)
			g02_success_ctr=ctr
		end
	else
		if ctr-g02_success_ctr>60 then
			change_scene(scn.gamesuccess)
		end
		return
	end

	if(g02_flapcd>0)g02_flapcd-=1
	g02_y+=g02_vy
	g02_vy+=grav
	if(g02_y>=70)g02_vy,g02_y=0,70
	if btndn[4] then
		if g02_flap==2
				and g02_flapcd>0 then
			g02_vy-=impulse
			g02_y-=1
			sfx(12,3)
		end
		g02_flap=1
		g02_flapcd=30
	elseif btndn[5] then
		g02_flap=2
		g02_flapcd=30
	elseif g02_flapcd==0 then
		g02_flap=0
	end
end

function game02_draw()
	cls(0)

	--sky
	rectfill(0,0,127,22,1)
	recthalftone(0,23,127,44,1,2)
	rectfill(0,45,127,66,2)
	recthalftone(0,67,127,88,2,14)
	rectfill(0,89,127,113,14)
		
	local px=50
	local py=g02_y
	if g02_flap==0 then
		art_parry_sitting(px+5,py+9,0.3)
	elseif g02_flap==1 then
		art_parry_flap1(px,py,0.5)
	elseif g02_flap==2 then
		art_parry_flap2(px,py,0.5)
	end
	art_barbell(px,py)
	art_parry_talons(px+5,py+10,0.3)

	local maxtime=default_maxtime()

	draw_footer(
		"lift the weights!",
		"use: ❎🅾️",
		g02_maxtime,
		g02_success_ctr)
end
--end game02--

--game03--
function game03_init()
	g03_success_ctr=nil
	g03_maxtime=default_maxtime()
	g03_spotx=64
	g03_spoty=60
	g03_spotr=25
	if(difficulty==1)g03_spotr=20
	if(difficulty==2)g03_spotr=15
	--put parry outside spotlight
	repeat
		g03_px=flr(rnd(128))
		g03_py=flr(rnd(114))
	until game03_dist()>1.1
end

--<1 = hit
function game03_dist()
	local centx=g03_px+5
	local centy=g03_py+8
	return dist(g03_spotx,
		g03_spoty,centx,centy)
		/g03_spotr
end

function game03_update()
	--parry-spotlight collision
	if g03_success_ctr==nil then
		if game03_dist()<0.5 then
			g03_success_ctr=ctr
			sfx(10,3)
		end
	else
		if ctr-g03_success_ctr>60 then
			change_scene(scn.gamesuccess)
		end
		return
	end

	--move spotlight vert
	if btn(btn_u) and
			g03_spoty>0 then
		g03_spoty-=1
	elseif btn(btn_d) and
			g03_spoty<112 then
		g03_spoty+=1
	end
	
	--move spotlight horiz
	if btn(btn_l) and
			g03_spotx>0 then
		g03_spotx-=1
	elseif btn(btn_r) and
			g03_spotx<128 then
		g03_spotx+=1
	end
end

function game03_draw()
	cls(7)
	if g03_success_ctr==nil then
		art_parry_sitting(
			g03_px,g03_py,0.25)
	else
		art_parry_flap1(g03_px-5,
			g03_py-9,0.45)
	end
	art_parry_talons(
		g03_px,g03_py,0.25)
	local bb_l=g03_spotx-g03_spotr
	local bb_r=g03_spotx+g03_spotr
	local bb_t=g03_spoty-g03_spotr
	local bb_b=g03_spoty+g03_spotr
	if(bb_l>0)rectfill(0,0,bb_l-1,127,0)
	rectfill(bb_r+1,0,127,127,0)
	if(bb_t>0)rectfill(0,0,127,bb_t-1,0)
	rectfill(0,bb_b+1,127,127,0)		
	for y=bb_t,bb_b,1 do
		for x=bb_l,bb_r,1 do
			if dist(x,y,g03_spotx,
					g03_spoty)>g03_spotr then
				pset(x,y,0)
			else
				break
			end
		end
		for x=bb_r,bb_l,-1 do
			if dist(x,y,g03_spotx,
					g03_spoty)>g03_spotr then
				pset(x,y,0)
			else
				break
			end
		end
	end

	draw_footer(
		"find parry!",
		"use: ⬅️➡️⬆️⬇️",
		g03_maxtime,
		g03_success_ctr)
end
--end game03--

-->8
--utilities

---font1
function init_font1()
	font1={}
	font1.charmap={} --x,y,w,h
	local h=5
	
	local lettersx={0,4,8,12,16,20,24,28,32,35,39,43,46,51,55,59,63,67,71,75,79,83,88,93,97,100,103}
	local lettersy=48
	local letters="abcdefghijklmnopqrstuvwxyz"
	for i=1,#letters do
		local ch=sub(letters,i,i)
		local charmap={}
		charmap.x=lettersx[i]
	 charmap.y=lettersy
		charmap.w=lettersx[i+1]-charmap.x
		charmap.h=h
		font1.charmap[ch]=charmap
	end
	
	local numbersx={0,3,6,9,12,15,18,21,24,27,30,38,46,53,60,67,74,75,77,79,81,83,84,85,89}
	local numbersy=53
	local numbers="0123456789⬅️➡️⬆️⬇️❎🅾️., ():!?"
	for i=1,#numbers do
		local ch=sub(numbers,i,i)
		local charmap={}
		charmap.x=numbersx[i]
		charmap.y=numbersy
		charmap.w=numbersx[i+1]-charmap.x
		charmap.h=h
		font1.charmap[ch]=charmap
	end
end

function print_font1(t,x,y)
	for i=1,#t do
		local ch=sub(t,i,i)
		local rct=font1.charmap[ch]
		if rct!=nil then
			sspr(rct.x,rct.y,rct.w,rct.h,x,y)
			x+=rct.w+1
		end
	end
end

function font1_width(t)
	local x=0
	for i=1,#t do
		local ch=sub(t,i,i)
		local rct=font1.charmap[ch]
		if rct!=nil then
			x+=rct.w+1
		end
	end
	return x
end
---end font1

function draw_dlg(ts,y)
	local maxw=0
	for _,t in pairs(ts) do
		maxw=max(font1_width(t),maxw)
	end	
	local x=centerx(maxw+16)
	draw_dlg_box(x,y,maxw+16,16+#ts*6)
	y+=8
	for _,t in pairs(ts) do
		print_font1(t,x+8,y,7)
		y+=6
	end
end

function draw_dlg_box(x,y,w,h)
	--background
	rectfill(x+1,y+1,x+w-2,y+h-2,13)
	--top line
	line(x+2,y,x+w-3,y,7)
	--left line
	line(x,y+2,x,y+h-3,7)
	--right line
	line(x+w-1,y+2,x+w-1,y+h-3,1)
	--bottom line
	line(x+2,y+h-1,x+w-3,y+h-1,1)
	--upper left
	spr(68,x,y)
	--upper right
	spr(69,x+w-8,y)
	--lower left
	spr(84,x,y+h-8)
	--lower right
	spr(85,x+w-8,y+h-8)
end

function print_wavy(t,x,y,c)
	local clock=-2*3.14159*ctr/400
	for i=1,#t do
		local ch=sub(t,i,i)
		local yoff=2*cos(clock+0.075*i)
		print(ch,x+(i-1)*4,y+yoff,c)
	end
end

function centerx(w)
	return 64-w/2
end

function center_text(t)
	return 64-#t*2
end

function poly_start(x,y,sclx,scly)
	ply={}
	ply.x=x
	ply.y=y
	ply.sclx=sclx
	ply.scly=scly
end

function poly_line(c,pts)
	local prevx=nil
	local prevy=nil
	for _,n in pairs(pts) do
		local px=flr(n/100)
		local py=n%100
		if(prevx!=nil)line(ply.x+prevx*ply.sclx,ply.y+prevy*ply.sclx,ply.x+px*ply.scly,ply.y+py*ply.scly,c)
		prevx=px
		prevy=py
	end
end

function poly(c,pts)
	local px=ply.x
	local py=ply.y
	local sx=ply.sclx
	local sy=ply.scly
	local pts2={}
	for i=1,#pts do
		local x=px+flr(pts[i]/100)*sx
		local y=py+pts[i]%100*sy
		add(pts2,x)
		add(pts2,y)
	end
	render_poly(pts2,c)
end

function polys(ts)
 --space-sep four digit ints
	--line: 9999 cccc xxyy...
	--poly: cccc xxyy...
	--tt: 10:line 20:poly
	--cc: color
	for _,t in pairs(ts) do
		local lst={}
		local isline=false
		for i=1,#t,5 do
			local n=tonum(sub(t,i,i+3))
			if n==9999 then
				isline=true
			else
				add(lst,n)
			end
		end
		local cccc=lst[1]
		deli(lst,1)
		if isline then
			poly_line(cccc,lst)
		else
			poly(cccc,lst)
		end
		lst={}
	end
end

--the following function is by
--scgrn: https://www.lexaloffle.com/bbs/?tid=28312
----
-- draws a filled convex polygon
-- v is an array of vertices
-- {x1, y1, x2, y2} etc
function render_poly(v,col)
 col=col or 5

 -- initialize scan extents
 -- with ludicrous values
 local x1,x2={},{}
 for y=0,127 do
  x1[y],x2[y]=128,-1
 end
 local y1,y2=128,-1

 -- scan convert each pair
 -- of vertices
 for i=1, #v/2 do
  local next=i+1
  if (next>#v/2) next=1

  -- alias verts from array
  local vx1=flr(v[i*2-1])
  local vy1=flr(v[i*2])
  local vx2=flr(v[next*2-1])
  local vy2=flr(v[next*2])

  if vy1>vy2 then
   -- swap verts
   local tempx,tempy=vx1,vy1
   vx1,vy1=vx2,vy2
   vx2,vy2=tempx,tempy
  end 

  -- skip horizontal edges and
  -- offscreen polys
  if vy1~=vy2 and vy1<128 and
   vy2>=0 then

   -- clip edge to screen bounds
   if vy1<0 then
    vx1=(0-vy1)*(vx2-vx1)/(vy2-vy1)+vx1
    vy1=0
   end
   if vy2>127 then
    vx2=(127-vy1)*(vx2-vx1)/(vy2-vy1)+vx1
    vy2=127
   end

   -- iterate horizontal scans
   for y=vy1,vy2 do
    if (y<y1) y1=y
    if (y>y2) y2=y

    -- calculate the x coord for
    -- this y coord using math!
    x=(y-vy1)*(vx2-vx1)/(vy2-vy1)+vx1

    if (x<x1[y]) x1[y]=x
    if (x>x2[y]) x2[y]=x
   end 
  end
 end

 -- render scans
 for y=y1,y2 do
  local sx1=flr(max(0,x1[y]))
  local sx2=flr(min(127,x2[y]))

  local c=col*16+col
  local ofs1=flr((sx1+1)/2)
  local ofs2=flr((sx2+1)/2)
  memset(0x6000+(y*64)+ofs1,c,ofs2-ofs1)
  pset(sx1,y,c)
  pset(sx2,y,c)
 end 
end

function recthalftone(x1,y1,x2,y2,c1,c2)
	for y=y1,y2 do
		line(x1,y,x2,y,c1)
		for x=x1+(y%2),x2,2 do
			pset(x,y,c2)
		end
	end
end

function draw_footer(t1,t2,
		maxtime,success_ctr)
	rectfill(0,114,127,127,bg or 0)
	if success_ctr==nil then
		print_font1(t1,2,116)
		print_font1(t2,2,123)
		art_timer(maxtime)
	end
end

function dist(x1,y1,x2,y2)
	return sqrt(
		(x2-x1)^2+(y2-y1)^2)
end

__gfx__
00000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111566111111111115665111333333333333333333333333333113331111111133b3343333333b33338333333333383333336533333333333333653333336533
11663361166661116633661133333333333333333a33333333331133111111113bbb33b333a3bbb3388e333a33338e8333337533333333333333753333337533
163333366333365633333361333a333333333a333333333333311333cc1111113bbb3bbb3333bbb3e8e883333338e88e33336533337777333333653333336533
5633a33333333363333e33653333333333333333333311313113133311cc11cc33433bbb33333433366733333333766333337533117777513333753333337533
6333333333a3333333a3333633333e33333333333331311313113333111111113b333343333b3333360633333333606333336533137777537676533367676533
63333333333333a3333333363333333333333333333113333333333311111111bbb33b3333bbb333367636366363676333337533317777535555753355555333
163333333333333333333365333333333a33333333113333333333a3c11cc11cbbb3bbb333bbb333360656676665606333336533333555533333653333333333
16333333a33333333a3333613333333333333333333113333e3333331cc11c113433bbb333343333376656666765667333337533333333333333753333333333
116333333e33a3333333361133333333333333333333333333333611333133333333333311111111360757066065606333333333333133333333653333533333
1163333333333333333365113333a33333333333333a3333333361113333133a33333b3311111111366656666665766333333333333313333333753335553633
11633a33333333a333a336113333333333e333333333333331111116333113333333bbb311cc1111367656076065666333333333337777333333653355056563
163333333a3333333333336133333333333333331133113111111611333133333b33bbb3cc11cc11366656666665676333333333337777533333753305566666
6333333333333a33a333333633333333333a333313113113a33311113a331333bbb334331111111136a7567666656a7367673333337777537676567655676656
16633333333a3333333333363333333333333333311333333333331133331133bbb3333311111111379656644675696355557533337777535555355560777505
11563333333333e33333a3613333333333333333333333333333a3613331313334333a331cc11cc1364656644565646333336533333555533333333307767750
116333a3333333333333365133333333333333e333333333333336513331133333333333111cc11c366756644665666333337533333113333333333376777670
1163333333333333a333336133333611116333333333333333333333333a13331111111133333333336666333333333333333333333365333333333300000000
163333333a333333333333653a3361111116333333333a333333a333333311331661111133333333363335333333333333333333333375333333333300000000
633333a333333a333333a3363336111111116333333333333333333333331133633661663333a333363aaaaa3377773333333333333365333333333300000000
63a33e3333333333333333363336511665163a333663333333333663333311633333363333333333363959593377775333333333333375333333333300000000
633333333633333333333336333361633663333365163333333361563a3611133333333333633333363959593377775376767676333337673333367600000000
163333336563366363333361333336333333333361116333a336511163311116333a333366166336363959593377775355555555333335553333755500000000
16363366111665165633361133a3333e333333331115633333336111163111113333333311111661363959593335555333333333333333333333653300000000
116566111111111111666111333333333a3333331116333333333611116116113333333311111111363aaaaa3333333333333333333333333333753300000000
00777777775000000000000000000000007777777777770000000002424000000033330000333500003335000044450000444500008885000088850000888500
0777777777770000000000000000000007dddddddddddd70000000242400000003bbbb3003bb305003bb3050049940500499405008ee805008ee805008ee8050
750770000777700000000000000000007ddd777dddddddd100000777777000003bbbbbb33bbb30333bbb300549994005499940058eee80058eee8005508e8005
000770000077700000000000000000007dd7ddddddddddd100007666666700003bbbbbb33bbb33b33bbb300549994005499940058eee80058888800550088005
000770000077700000000000000000007d7dddddddddddd1000766666666d0003bbbbbb33bbb3bb33bbb333349994005499940058ee800055000000550000005
000770000077700000000000000000007d7dddddddddddd10076666666666d003bbbbbb33bbbbbb33bbbbbb349999405499940058e8000055000000550000005
000777777777000000000000000000007d7dddddddddddd10076666666666d7003bbbb3003bbbb3003bbbb300499994004994050080000500500005005000050
0007777777700000000000000000000e7dddddddddddddd10076666666666d700033330000333300003333000044440000444500005555000055550000555500
00077700000000000000000000eeeee27dddddddddddddd10076666666666d600000000000000000000000000000000000000000000000000000000000000000
0007750077007700770070700e2e0e007dddddddddddd1d10076666666666dd00000000000000000000000000000000000000000000000000000000000000000
005770070070707070707070000e0e007dddddddddddd1d10076666666666d000000000000000000000000000000000000000000000000000000000000000000
007770077770770077007070000e0e007dddddddddddd1d1000766666666d0000000000000000000000000000000000000000000000000000000000000000000
057770070070707070705770000e0e007ddddddddddd1dd10000d666666d00000000000000000000000000000000000000000000000000000000000000000000
077770770770707070700070000e0eee7dddddddd111ddd100000dddddd000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000007007000eeeee207dddddddddddd1000000024240000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000077500ee20000001111111111110000000002424000000000000000000000000000000000000000000000000000000000000000000000
07707770077077777770777707777007777777770070707707770070770777007707770077777777007700077000770077077770000000000000000000000000
70077007700770077000700770007007070007070707007070777077007700770077007700007007007700077000707077070070000000000000000000000000
77077770700070077770770070777777070007077007007070770777007770770077707777007007007070707070707700770700000000000000000000000000
70777007700070077000700070077007070707070707007000770077007707070707070000707007007070707070770700077000000000000000000000000000
70077770077777707777700007707007777077070077777000770070770700007077007777000700770007000707070077707770000000000000000000000000
7770707707707077770777777777770ee2eee00eee2ee00ee2ee00ee2ee00eeeee00eeeee0000000770070770000000000000000000000000000000000000000
707770007007707700700007707707ee22eeeeeeee22eeee222eeeee2eeeee2e2eeee222ee000007007777007000000000000000000000000000000000000000
707070070070777770770007777077e222222ee222222ee22222ee22222eeee2eeeee2e2ee000007007070070000000000000000000000000000000000000000
707070700007007007707070707007ee22eeeeeeee22eeeee2eeeee222eeee2e2eeee222ee007007007700000000000000000000000000000000000000000000
0777777777700077700707007777700ee2eee00eee2ee00ee2ee00ee2ee00eeeee00eeeee0770000770070070000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00760760760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00670670670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00760760760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00670670670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05660660660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05665665665777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
65665665665666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55665665665666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05665665665555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05660660660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00650650650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00560560560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00650650650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00560560560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2929292929292929292929292929292900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1710381112171710113811113811121700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
29203a2133381134212824142436322900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
17203b3c3b3c3c3c3c3c2c192122171700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
292023281c14181819231c143632292900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
172021211c19181815251d252617171700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
293039351c15252516241c133338122900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
171717203d2d3c3c3c3c2e3c3b13221700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
292929303137352f2f2f2f2f1c28222900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
171717171717203e3c3c3c3c1e36321700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
292929292929201c363135211c22292900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
171710113811343b221720193b22171700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2929201a1b14191c222930313932292900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1717202a2b3b3c1f221717171717171700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2929303931393931322929292929292900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1717171717171717171717171717171700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000400002701027030270302703021030210302101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
491e00002b05028050186002b05028050000002b0500000026050260502605026050000000000000000000002b05028050000002b05028050000002b050000002d0502d0502d0502d0502b0502b0500000000000
000100002b00028000186002b00028000000002b0000000026000260002600026000000000000000000000002b00028000000002b00028000000002b000000002d0002d0002d0002d0002b0002b0000000000000
010f00201a653000033b603000031a62300003000030000321653000033b62300003216230000300003000031a653000033b603000031a623000030000300003216533b6233b6233b62321623000030000300003
011e00002b05028050186002b05028050000002b0500000026050260502605028050240502400000000000002b05028050000002b05028050000002f05024603300503005030050300502b0002b0000000000000
011e0020197321c7322073200702197321c7322073200702197321c7322073200702197321c73220732007021b7321e73221732007021b7321e73221732007021b7321e73221732007021b7321e7322173200702
011e0000195501955019550005001b5501c5501e550205502355021550005001e550205502055020550005002355021550005001e55020550205502055000000205501c550000001b55019550195501955000000
010f00201962300000000000000020633000000000000000000000000000000000000000000000000000000019623000001962300000000000000000000000002b63300000000000000000000000000000000000
011e00001c7322073223732000001c7322073223732000001c7322073225732000001c7322073225732000001b7322073225732000001b73220732257320000020732237321b732000001c7321c7321c73200000
011e00001955015500195501e500195501955015550000001e5500000020550205001c5501c50000000000001e5501c500205501e5501b5001b5501c5001c5001c5501050010500105000d5500d5500d55000000
010400002475024750247500000029750297502975000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000025350243502435023350223501f3501d35019350143500f35009350013500135000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
000500001d6501e630166201d6001e6001e6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011100001a7401e74021740157001a7401e74021740007001a7401e74021740007001a7401e740217400070013740177401a7400070013740177401a7400070013740177401a7400070013740177401a74000000
0111000015720197201c7200000015720197201c7200000015720197201c7200000015720197201c7200000013720177201a7200070013720177201a7200070013720177201a7200070013720177201a72000700
011100000b630000000e6000e6003d6100000000000000000b630000000b6000b6303d610000000b630000000b630000000b600000003d6100000000000000000b630000000b630000003d6100b6300000000000
011100001a5701e5001e5001e5702150021500215701e50023570000000000000000000000000000000000001e57021570235702157023570215701e570000001c57000000000000000000000000000000000000
001100001c5701a5701c5001c5701a57021500195001c50025570000000000000000235702157000000000001a5701a5701a5701a570000000000000000000000000000000000000000000000000000000000000
001100001c5701c57000000000001a5701957000000000001c5701c5701c5701c5700000000000000000000028570000002857000000265702557000000000002857028570285702857000000000000000000000
001100001c570000001a500000001a570000001957000000175700000000000000001957000000000002350017570000000000000000155700000000000000000000000000000000000000000000000000000000
__music__
00 01034344
00 04034344
04 41424344
01 05060744
00 05060744
02 08090744
01 0d0f1044
00 0e0f1144
00 0d0f1244
02 0e0f1344

